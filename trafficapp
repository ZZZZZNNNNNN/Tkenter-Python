
import tkinter as tk
import time
import serial


arduino = serial.Serial(port="COM5", baudrate=9600, timeout=1)
time.sleep(2)  # wait for connection





BG_COLOR = "#121212"
FG_COLOR = "#ffffff"
BTN_COLOR = "#00adb5"
FONT_MAIN = ("Cooper Black", 14, "bold")
FONT_TITLE = ("Cooper Black", 20, "bold")


def traffic_light_control():
    app = tk.Tk()
    app.title("Traffic Light Control")
    app.geometry("300x450")
    app.configure(bg=BG_COLOR)

    tk.Label(app, text="ðŸš¦ TRAFFIC LIGHT SYSTEM", font=FONT_TITLE, bg=BG_COLOR, fg=BTN_COLOR).pack(pady=20)

    status_label = tk.Label(app, text="LIGHT: OFF", font=("Cooper Black", 16, "bold"), bg=BG_COLOR, fg="white")
    status_label.pack(pady=10)

    timer_label = tk.Label(app, text="TIMER: 0", font=("Cooper Black", 14, "bold"), bg=BG_COLOR, fg="yellow")
    timer_label.pack(pady=10)

    # Canvas for traffic lights
    canvas = tk.Canvas(app, width=200, height=300, bg="white")
    canvas.pack()

    canvas.create_rectangle(50, 50, 150, 250, fill="black")

    red_light = canvas.create_oval(75, 60, 125, 110, fill="gray")
    yellow_light = canvas.create_oval(75, 120, 125, 170, fill="gray")
    green_light = canvas.create_oval(75, 180, 125, 230, fill="gray")

    lights = [
        ("Red", red_light, "red", 10),
        ("Green", green_light, "green", 10),
        ("Yellow", yellow_light, "yellow", 5),
    ]
    current_index = {"value": 0}  # use dict to make it mutable inside function

    def run_light():
        color_name, light_id, light_color, duration = lights[current_index["value"]]

        # Reset all lights to gray
        canvas.itemconfig(red_light, fill="gray")
        canvas.itemconfig(yellow_light, fill="gray")
        canvas.itemconfig(green_light, fill="gray")

        # Turn on current light
        canvas.itemconfig(light_id, fill=light_color)
        status_label.config(text=f"LIGHT: {color_name}")

        # ðŸ”´ðŸŸ¢ðŸŸ¡ Send to Arduino
        if color_name == "Red":
            arduino.write(b'R')
        elif color_name == "Green":
            arduino.write(b'G')
        elif color_name == "Yellow":
            arduino.write(b'Y')

        # Countdown timer
        def countdown(t):
            if t >= 0:
                timer_label.config(text=f"TIMER: {t}")
                app.after(1000, countdown, t - 1)
            else:
                current_index["value"] = (current_index["value"] + 1) % len(lights)
                run_light()

        countdown(duration)

    run_light()
    app.mainloop()


